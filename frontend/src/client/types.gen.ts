// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
}

export type ItemPublic = {
  title: string
  description?: string | null
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean





export type KnowledgeBaseCreate = {
  name: string
  description?: string | null
}

export type KnowledgeBasePublic = {
  name: string
  description?: string | null
  id: string
  create_by: string
  status: number
}

export type KnowledgeBasesPublic = {
  data: Array<KnowledgeBasePublic>
  count: number
}

export type KnowledgeBaseUpdate = {
  name?: string | null
  description?: string | null
}


export type KnowledgeBasesReadKnowledgeBasesData = {
  limit?: number
  skip?: number
}

export type KnowledgeBasesReadKnowledgeBasesResponse = KnowledgeBasesPublic

export type KnowledgeBasesCreateKnowledgeBaseData = {
  requestBody: KnowledgeBaseCreate
}

export type KnowledgeBasesCreateKnowledgeBaseResponse = KnowledgeBasePublic

export type KnowledgeBasesReadKnowledgeBaseData = {
  id: string
}

export type KnowledgeBasesReadKnowledgeBaseResponse = KnowledgeBasePublic

export type KnowledgeBasesUpdateKnowledgeBaseData = {
  id: string
  requestBody: KnowledgeBaseUpdate
}

export type KnowledgeBasesUpdateKnowledgeBaseResponse = KnowledgeBasePublic

export type KnowledgeBasesDeleteKnowledgeBaseData = {
  id: string
}

export type KnowledgeBasesDeleteKnowledgeBaseResponse = Message

export type KnowledgeBasesGetKnowledgeBaseFilesData = {
  id: string
}



export type DocPublic = {
  name: string
  id: string
  kbId: string
  create_by: string
  status: number
}

export type KnowledgeBasesGetKnowledgeBaseFilesResponse = DocPublic


export type DocsReadDocsData = {
  limit?: number
  skip?: number
  kbId?: string
}

export type DocCreate =  {
  name: string
}

export type DocUpdate = {
  name?: string | null
}

export type DocReadDocsResponse = DocPublic

export type DocCreateDocData = {
  kbId: string
  requestBody: DocCreate
}

export type DocCreateDocResponse = DocPublic

export type DocReadDocData = {
  id: string
  kbId: string
}

export type DocReadDocResponse = DocPublic

export type DocUpdateDocData = {
  id: string
  kbId: string
  requestBody: DocUpdate
}

export type DocUpdateDocResponse = DocPublic

export type DocDeleteDocData = {
  id: string
  kbId: string
}

export type DocDeleteDocResponse = Message


